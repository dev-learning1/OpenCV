필터링
영상의 필터링
영상에서 필요한 정보만 통과시키고 원치 않는 정보는 걸러내는 작업

공간적 필터링
- 영상의 픽셀값을 직접 이용하는 필터링 방법
- 대상 좌표의 픽셀값과 주변 픽셀값을 동시에 사용
- 마스크 연산을 이용
(마스크 = 커널(kernel) = 윈도우(window) = 템플릿(template))

* 마스크의 형태와 값에 따라 필터의 역할이 결정됨
    1. 영상 부드럽게 만들기
    2. 영상 날카롭게 만들기
    3. 엣지 검출
    4. 잡음 제거

OpenCV 필터링에서 지원하는 가장자리 픽세 확장
BORDER_CONSTANT : abcdefgh -> 000abcdefgh000
BORDER_REPLICATE : abcdefgh -> aaaabcdefghhhh
BORDER_REFLECT_101 : abcdefgh -> dcbabcdefghgfe (디폴트)


cv2.filter2D(src, ddepth, kernel, dst=None, anchor=None, delta=None, borderType=None)
    src : 출력영상
    ddepth : 출력 영상 데이터 타입. -1을 지정하면 src 동일한 타입. 예) cv2.CV_8U, cv2.CV_23F
    kernel : 필터 마스크 행렬
    anchor : 고정점 위치, (-1, -1)이면 자동으로 필터 중앙을 고정점으로 사용
    delta : 추가적으로 더할 값
    borderType : 가장자리 픽셀 확장 방식
    dst : 출력 영상


평균값 필터(Mean filter)
- 영상의 특정 좌표값을 주변 픽셀값들의 산술 평균으로 설정
- 픽셀들 간의 그레이스케일 값 변화가 줄어들어 날카로운 엣지가 무뎌지고 영상에 있는 잡음의 영향이 사라지는 효과

* 마스크 크기가 커질수록 평균값 필터 결과가 부드러워짐(많은 연산량이 필요)

cv2.blur(src, ksize, dst=None, anchor=None, borederType=None)
    ksize : 평균값 필터 크기. (width, height) 형태의 튜플


가우시안 필터(Gaussian filter)
- 평균값 필터에 의한 블러링의 단점을 극복
- 가까운 픽셀은 큰 가중치를, 멀리 있는 픽셀은 작은 가중치를 사용하여 계산
- 가우시안 함수

cv2.GaussianBlur(src, ksize, sigmaX, dst=None, sigmaY=None, borderType=None)
    src : 가우시안 커널 크기. (0, 0)을 지정하면 sigma 값에 의해 자동 결정됨
    sigmaX : x방향 sigma
    sigmaY : y방향 sigma
    borderType : 가장자리 픽셀 확장 방식


언샤프 마스크(Unsharp mask)
- 날카롭지 않은 영상, 부드러워진 영상을 이용하여 날카로운 영상을 생성


clip()
- 배열에서 값을 하한 ~ 상한 값의 범위로 값을 자르는 함수
    np.clip(array, 하한값, 상한값)

    예1)
    arr = np.arrange(10)
    # array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)

    np.clip(arr, 2, 7)
    # array(2, 2, 2, 3, 4, 5, 6, 7, 7, 7)

    예2)
    arr = np.array([[4, 5, 2],
                    [1, 9, 3],
                    [7, 6, 8]])

    np.clip(arr, 2, 7)
    # arr = np.array([[4, 5, 2],
                      [2, 7, 3],
                      [7, 6, 7]])


영상의 잡음(Noise)
- 영상의 픽셀 값에 추가되는 원치 않는 형태의 신호

미디언 필터(Median filter)
- 주변 픽셀들의 값들을 정렬하여 그 중아값(median)으로 픽셀값을 대체
- 소금-후추 잡음 제거에 효과적

    48 60  72
    52 102 88
    69 84  92

    48 60 72 52 102 88 69 84 92
    48 52 60 69 72 84 88 92 102  (정렬)

    48 52 60
    69 72 84
    88 92 102

    cv2.medianBlur(src, ksize, dst=None)
        ksize : 커널크기. 1보다 큰 홀수를 지정


< 문제 >
필터 카메라 프로그램을 제작

    캠을 통해 아래 기능을 구현
    - blur
    - edge
    - 스페이스바를 누를 때마다 모드 변경


양방향 필터링 함수
bilateralFilter()

    cv2.bilateralFilter(src, d, sigmaColor, sigmaSpace, dst=None, borderType=None)
        d : 필터링에 사용될 이웃 픽셀의 거리(지름). -1을 입력하면 sigmaSpace값에 의해 자동 결정됨
        sigmaColor : 색 공간에서 필터의 표준 편차
        sigmaSpace : 좌표 공간에서 필터의 표준 편차

양방향 필터
- 에지 보전 잡음 제거 필터
- 평균 값 필터 또는 가우시안 필터는 에지 부근에서도 픽셀값을 평탄하게 만드는 단점 있음
- 기준 픽셀과 이웃 픽셀과의 거리, 픽셀 값의 차이를 함께 고려하여 블러링 정도를 조절


Canny()
- 엣지 검출 함수
- 이미지의 엣지만을 리턴

    Canny(minVal, maxVal)
        minVal : 최소 임계값
        maxVal : 최대 임계값

* 임계값이 클수록 엣지가 검출되기 어렵고, 작을 수록 엣지가 검출되기 쉬움


기하학적 변환
- 영상을 구성하는 픽섹의 배치 구조를 변경함으로 전체 영상의 모양을 바꾸는 작업

이동변환(Translation transformation)
- 가로 또는 세로 방향으로 영상을 특정 크기만큼 이동시키는 변환
- x축과 y축 방향으로의 이동 변위를 지정

    warpAffine(src, M, dsize, dst=None, flags=None, borderMode=None, borderValue=None)
        M : 2x3 어파인 변환 행렬. 실수형
        dsize : 결과 영상 크기. (w, h) 튜플. (0, 0)이면 src와 같은 크기로 설정
        flags : 보간법. 기본값은 cv2.INTER_LINEAR
        borderMode : 가장자리 픽셀 확장 방식. 기본값은 cv2.BORDER_CONSTANT
        borderValue : cv2.BORDER_CONSTANT일 때 사용할 상수 값. 기본값은 0
