img1 = cv2.imread('cat.bmp', cv2.IMREAD_GRAYSCALE)
img2 = cv2.imread('cat.bmp') 또는 cv2.imread('cat.bmp', cv2.IMREAD_COLOR)
img1, img2는 numpy.ndarray 형태 이다.

numpy.ndarray ndim : 차원수
              shape : 각 차원의 크기, (h,w) 또는 (h, w, 3)
              size : 전체 원소 개수
              dtype : 원소의 데이터 타입

영상의 생성
numpy.empty() : 임의의 값으로 초기화된 배열을 생성
numpy.zeros() : 0으로 초기화된 배열을 생성
numpy.ones() : 1로 초기화된 배열을 생성
numpy.full() : 원하는 값으로 초기화된 배열을 생성

영상의 복사
img1 = cv2.imread('cat.bmp')
img2 = img1.copy()

▲ 이미지 맵 좌표 추출 사이트
http://maschek.hu/imagemap/imgmap/

마스크 연산
ROI
- Region of Interest(관심 영역)
- 영상에서 특정 연산을 수행하고자 하는 임의의 부분 영역

마스크 연산
- OpenCV는 ROI 연산을 지원
- 마스크 영상은 cv2.CV_8UC1(그레이스케일 영상) 타입
- 마스크 영상의 픽셀값이 0이 아닌 위치에서만 연산이 수행됨
    (마스크 영상은 0 또는 255로 구성된 이진 영상)

cv2.copyTo(src, mask, dst=None) -> dst
src : 입력영상, 카피할 대상
mask : 마스크 영상, 0이 아닌 픽셀에 대해서만 복사 연산을 수행
dst : 출력영상, 만약 src와 크기 및 타입이 같은 dst를 입력으로 지정하면 dst를 새로 만들지 않고 연산을 수행
그렇지 않으면 dst를 새로 생성하여 연산을 수행한 후 반환함

그리기 함수
- 선 그리기, 도형 그리기, 문자열 출력 등을 제공
- 알고리즘을 이용하여 영상의 픽셀 값 자체를 변경 -> 원본 영상이 필요하다면 복사본을 꼭 만들어야 함
- 그레이스케일 영상에서는 컬러로 그리기가 안됨 -> cv2.cvtColor() 함수로 RGB 컬러 영상으로 변환한 후 작업

동영상 처리하기
cv2.VideoCapture 클래스
- 카메라와 동영상으로부터 프레임(frame)을 받아오는 작업

cv2.VideoCapture(index) -> retval
index : 시스템 기본 카메라 index 0, 1, ... / 카메라 지정(camera_id + domain_offset_id)
retval : cv2.VideoCapture 객체

cv2.VideoCapture.isOpened() -> reval
reval : 성공하면 True, 실패하면 False

cv2.VideoCapture.read() -> retval, image
retval : read() 결과, 성공하면 True, 실패하면 False
frame : 현재 프레임(영상), numpy.ndarray